#!/bin/bash

echo "üöÄ Building iOS app with automated photo upload..."

# Check if we're in the right directory
if [ ! -f "capacitor.config.json" ]; then
    echo "‚ùå Error: capacitor.config.json not found. Run this script from the project root."
    exit 1
fi

# Step 1: Install dependencies if needed
echo "üì¶ Checking dependencies..."
if [ ! -d "node_modules" ]; then
    echo "üì¶ Installing npm dependencies..."
    npm install
fi

# Step 2: Build web assets
echo "üåê Building web assets..."
if [ -f "package.json" ]; then
    npm run build 2>/dev/null || echo "‚ö†Ô∏è No build script found, using existing www/"
fi

# Step 3: Copy automation files to www
echo "üì± Copying automation files..."
cp www/automated-photo-monitor.js www/automated-photo-monitor.js.bak 2>/dev/null || true
cp www/automated-upload-integration.js www/automated-upload-integration.js.bak 2>/dev/null || true
cp www/manual-photo-upload.js www/manual-photo-upload.js.bak 2>/dev/null || true

# Step 4: Sync Capacitor
echo "üîÑ Syncing Capacitor..."
npx cap sync ios

# Step 5: Check if Xcode project needs updates
echo "üîç Checking Xcode project..."
if [ ! -f "ios/App/App/PhotoLibraryMonitor.swift" ]; then
    echo "‚ùå PhotoLibraryMonitor.swift not found in Xcode project"
    echo "üìã Please add the following files to your Xcode project manually:"
    echo "   - ios/App/App/PhotoLibraryMonitor.swift"
    echo "   - ios/App/App/PhotoLibraryMonitor.m"
    echo "   - ios/App/App/EventPhotoPicker.swift"
    echo "   - ios/App/App/EventPhotoPicker.m"
    exit 1
fi

if [ ! -f "ios/App/App/EventPhotoPicker.swift" ]; then
    echo "‚ùå EventPhotoPicker.swift not found in Xcode project"
    echo "üìã Please add the following files to your Xcode project manually:"
    echo "   - ios/App/App/EventPhotoPicker.swift"
    echo "   - ios/App/App/EventPhotoPicker.m"
    exit 1
fi

# Step 6: Verify Info.plist permissions
echo "üîê Checking permissions in Info.plist..."
if grep -q "NSPhotoLibraryUsageDescription" ios/App/App/Info.plist; then
    echo "‚úÖ Photo library permissions found"
else
    echo "‚ö†Ô∏è Adding photo library permissions to Info.plist..."
    # Add photo library permissions if missing
    # This is a simplified version - manual editing may be needed
fi

if grep -q "UIBackgroundModes" ios/App/App/Info.plist; then
    echo "‚úÖ Background modes found"
else
    echo "‚ö†Ô∏è Background modes missing - please add to Info.plist manually"
fi

# Step 7: Open Xcode project
echo "üì± Opening Xcode project..."
open ios/App/App.xcworkspace

echo ""
echo "üéØ Next Steps:"
echo "1. ‚úÖ Verify PhotoLibraryMonitor files are added to Xcode project"
echo "2. ‚úÖ Build and run the app in Xcode"
echo "3. ‚úÖ Test automated photo monitoring with console commands:"
echo ""
echo "   Console Commands to Test:"
echo "   ========================"
echo "   // 1. Check if automation is available"
echo "   window.PhotoShareAutomatedUploadIntegration.getFullStatus()"
echo ""
echo "   // 2. Enable auto-upload for current event"
echo "   enableEventAutoUpload()"
echo ""
echo "   // 3. Start automated monitoring"
echo "   window.PhotoShareAutomatedUploadIntegration.forceStartMonitoring()"
echo ""
echo "   // 4. Take a photo and check if it's detected"
echo "   window.PhotoShareAutomatedUploadIntegration.triggerManualPhotoCheck()"
echo ""
echo "üìã The automated system will:"
echo "   ‚Ä¢ Monitor photo library in background (30 second intervals)"
echo "   ‚Ä¢ Detect new photos automatically"
echo "   ‚Ä¢ Upload photos that match event timeframes"
echo "   ‚Ä¢ Show notifications for upload progress"
echo "   ‚Ä¢ Continue monitoring even when app is backgrounded"
echo ""
echo "üîß Troubleshooting:"
echo "   ‚Ä¢ If plugin not available: Rebuild app in Xcode"
echo "   ‚Ä¢ If permissions denied: Check iOS Settings > Privacy > Photos"
echo "   ‚Ä¢ If monitoring not starting: Enable auto-upload for an event first"
echo ""

# Step 8: Show files created
echo "üìÅ Files created for automated upload:"
echo "   - ios/App/App/PhotoLibraryMonitor.swift (Native iOS plugin)"
echo "   - ios/App/App/PhotoLibraryMonitor.m (Plugin definition)"
echo "   - ios/App/App/EventPhotoPicker.swift (Event-filtered photo picker)"
echo "   - ios/App/App/EventPhotoPicker.m (Photo picker plugin definition)"
echo "   - www/automated-photo-monitor.js (Background monitoring)"
echo "   - www/automated-upload-integration.js (System integration)"
echo "   - www/event-photo-picker.js (Event photo picker interface)"
echo "   - www/event-photo-picker-demo.js (Photo picker testing)"
echo "   - www/manual-photo-upload.js (Manual upload fallback)"
echo "   - www/console-dashboard-commands.js (Debug commands)"
echo ""

echo "‚úÖ Build script complete! Check Xcode for any compilation errors."